import React from 'react';
import { History } from 'lucide-react';

const AuditLogging = () => {
    const logTypes = [
        { type: 'Appraisal Edits', fields: 'Who edited, What was changed (field), Old Value, New Value, Timestamp' },
        { type: 'Appraisal Submission', fields: 'Submitted By, Date/Time, Status (Self/Manager/HR), Cycle Name' },
        { type: 'Score Lock/Finalization', fields: 'Locked By, Final Score, Date, Cycle Name' },
        { type: 'Salary Revisions', fields: 'Employee ID, Before CTC, After CTC, Change Reason, Approved By, Approval Timestamp' },
        { type: 'Increment Rule Trigger', fields: 'Score Range, Rule Applied, Auto % Suggested, Overridden % (if any), Final %' },
        { type: 'Training Attendance', fields: 'Employee Name, Trainer Name, Marked By, Attendance Status, Date/Time' },
        { type: 'Feedback Submitted', fields: 'By Whom (Employee/Trainer), Form ID, Timestamp, Average Score' },
        { type: 'Certificate Generated', fields: 'Employee ID, Training Name, Generated By (HR/Trainer), Date' },
        { type: 'Certificate Downloaded', fields: 'Download Status (Yes/No), Downloaded By, Date/Time' },
        { type: 'Settings Changes', fields: 'Module (Appraisal/Training/Salary), Changed By, Field Changed, Old â†’ New, Timestamp' },
        { type: 'Access Role Changes', fields: 'Role Name, Permissions Changed, Assigned To, Changed By, Timestamp' },
        { type: 'Login / Logout', fields: 'User ID, Role, IP Address (if enabled), Device Info, Login Time, Logout Time' },
        { type: 'Failed Login Attempts', fields: 'User ID, Attempt Count, IP, Block Status (if triggered)' },
    ];

    return (
        <div className="space-y-6">
            <div className="flex items-center gap-3">
                <History size={24} className="text-blue-600" />
                <h1 className="text-2xl font-bold text-gray-800">Audit & Logging Configuration</h1>
            </div>
            <p className="text-gray-600">This page outlines the types of actions logged throughout the system for compliance, security, and rollback purposes. All logs are immutable and visible only to authorized administrators.</p>

            <div className="card bg-base-100 shadow-xl">
                <div className="card-body">
                    <h2 className="card-title">Logged Event Types</h2>
                    <div className="overflow-x-auto">
                        <table className="table table-zebra">
                            <thead>
                                <tr>
                                    <th>Log Type</th>
                                    <th>Captured Fields</th>
                                </tr>
                            </thead>
                            <tbody>
                                {logTypes.map((log, index) => (
                                    <tr key={index}>
                                        <td className="font-semibold align-top">
                                            <div className="badge badge-outline">{log.type}</div>
                                        </td>
                                        <td className="text-sm text-gray-600">{log.fields}</td>
                                    </tr>
                                ))}
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default AuditLogging;
